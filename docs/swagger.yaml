definitions:
  domain.Quest:
    properties:
      name:
        type: string
      user_id:
        type: string
    type: object
  domain.UserDTO:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  handler.questRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  handler.userRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      user_id:
        type: integer
    required:
    - email
    - name
    - password
    - user_id
    type: object
info:
  contact: {}
  description: App designed to communicate with GeoQuest's mobile app and provide
    CRUD functions
  title: GeoQuest Backend
  version: "1.0"
paths:
  /quests/:
    post:
      consumes:
      - application/json
      description: Save new quest
      parameters:
      - description: Quest to save
        in: body
        name: quest
        required: true
        schema:
          $ref: '#/definitions/handler.questRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Quest'
        "422":
          description: ""
        "500":
          description: ""
      summary: New quest
      tags:
      - Quests
  /quests/{id}:
    get:
      consumes:
      - application/json
      description: Quest info
      parameters:
      - description: Quest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Quest'
        "500":
          description: ""
      summary: Quest
      tags:
      - Quests
  /users/:
    post:
      consumes:
      - application/json
      description: Save new user
      parameters:
      - description: User to save
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.userRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.UserDTO'
        "422":
          description: ""
        "500":
          description: ""
      summary: New user
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: User info
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.UserDTO'
        "500":
          description: ""
      summary: User
      tags:
      - Users
swagger: "2.0"
